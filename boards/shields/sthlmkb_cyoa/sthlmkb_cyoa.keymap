/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>


/ {
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1   |  2   |  3   |  4   |  5   |   6   |  7    |  8   |  9   |   0   | BSPC  |
            // |  TAB  |   Q  |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   |  \    |
            // | ADJUST|  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   | ENTER |
            // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |   '   |
            // | LCTL  | MENU | LGUI | LALT | LOWR | SPACE| SPACE |  RAIS | LEFT | DOWN | UARW  | RARW  |


            bindings = <
                &kp ESC    &kp N1       &kp N2      &kp N3      &kp N4     &kp N5      &kp N6      &kp N7  &kp N8      &kp N9      &kp N0      &kp BSPC
                &kp TAB    &kp Q        &kp W       &kp E       &kp R      &kp T       &kp Y       &kp U   &kp I       &kp O       &kp P       &kp BSLH
                &mo 3      &kp A        &kp S       &kp D       &kp F      &kp G       &kp H       &kp J   &kp K       &kp L       &kp SEMI    &kp RET
                &kp LSHFT  &kp Z        &kp X       &kp C       &kp V      &kp B       &kp N       &kp M   &kp COMMA   &kp DOT     &kp FSLH    &kp SQT
                &kp LCTRL  &kp K_APP    &kp LGUI    &kp LALT    &mo 1      &kp SPACE   &kp SPACE   &mo 2   &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------------
            // |  F12  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   F7  |  F8  |  F9  | F10   |  F11  | 
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   -   |  =   |  [   |   ]   |   \   |
            // |       |      |      |SYSRQ |      |      |       |   _   |  +   |  {   |   }   |       |
            // |       |      |      |      |      |      |       | LS(#) |LS(|) |      |       |       |
            // |       |      |      | RALT |      |      |       |       | HOME | PGDN | PGUP  | END   |
            bindings = <
                &kp F12   &kp F1   &kp F2   &kp F3     &kp F4    &kp F5       &kp F6          &kp F7              &kp F8              &kp F9       &kp F10          &kp F11
                &kp TILDE &kp EXCL &kp AT   &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET       &kp MINUS           &kp EQUAL           &kp LBKT     &kp RBKT         &kp BSLH
                &trans    &trans   &trans   &kp SYSREQ &trans    &trans       &trans          &kp UNDER           &kp PLUS            &kp LBRC     &kp RBRC         &trans
                &trans    &trans   &trans   &trans     &trans    &trans       &trans          &kp LS(NON_US_HASH) &kp LS(NON_US_BSLH) &trans       &trans           &trans
                &trans    &trans   &trans   &kp RALT   &trans    &trans       &trans          &trans              &kp HOME            &kp PG_DN    &kp PG_UP        &kp END
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------
            // |   `   |  1   |  2   |  3   |  4   |  5   |  6    |   [   |  ]   |  -   |   =   |  DEL  |
            // |  ESC  |  F1  |  F2  |  F3  |  F4  |      |       |       |      |kmute2|   #   |   \   |
            // |  DEL  |  F5  |  F6  |  F7  |  F8  |      |       |       |      | kmute| BASS+ |       |
            // |       |  F9  |  F10 |  F11 |  F12 |      |       | PAUSE |      | cmute|       |       |
            // |       |      |      |      |      |  adj |       |       | NEXT | Vol- | Vol+  | PLAY  |
            bindings = <
                &kp GRAVE &kp N1   &kp N2   &kp N3   &kp N4    &kp N5  &kp N6    &kp LBKT        &kp RBKT        &kp MINUS    &kp EQUAL        &kp DEL
                &kp ESC   &kp F1   &kp F2   &kp F3   &kp F4    &trans  &trans    &trans          &trans          &kp K_MUTE2  &kp NON_US_HASH  &kp NON_US_BSLH 
                &trans    &kp F5   &kp F6   &kp F7   &kp F8    &trans  &trans    &trans          &trans          &kp K_MUTE   &kp C_BASS_BOOST &trans
                &trans    &kp F8   &kp F9   &kp F11  &kp F12   &trans  &trans    &kp PAUSE_BREAK &trans          &kp C_MUTE   &trans           &trans
                &trans   &trans   &trans   &trans    &trans    &mo 3   &trans    &trans          &kp C_NEXT      &kp C_VOL_DN &kp C_VOL_UP     &kp C_PLAY_PAUSE
            >;
        };

        adjust_layer {
            // ------------------------------------------------------------------------------------------
            // |tog(4)|  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9   |  F10 |  F11 |    F12    |
            // |      |scr up|  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |mouseup|  NA  |  NA  |LALT(PRTSN)|
            // |      |scr dn| lclk | mclk | rclk |  NA  |  NA  |msleft|mousedn|msright|  NA |   PRTSN   |
            // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA   |  NA  |  NA  |LCTRL(DEL) |
            // |      |      |      |      |      |BOOTLD|BOOTLD|      |       |      |      |           |
            bindings = <
                &tog 4   &kp F2         &kp F3         &kp F4       &kp F5     &kp F6       &kp F7       &kp F8         &kp F9         &kp F10        &kp F11         &kp F12
                &trans   &msc SCRL_UP   &none          &none        &none      &none        &none        &none          &mmv MOVE_UP   &none           &none          &none          
                &trans   &msc SCRL_DOWN &mkp LCLK      &mkp MCLK    &mkp RCLK  &none        &none        &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none          &kp PSCRN
                &trans   &none          &none          &none        &none      &none        &none        &none          &none          &none          &none           &kp LC(DEL)
                &trans   &trans         &trans         &trans       &trans     &bootloader  &bootloader  &trans         &trans         &trans         &trans          &trans
            >;
        };

        flock_layer {
            // ----------------------------------------------------------------------------------------------
            // |tog(4) |  F2    |   F3   |   F4   |   F5   |   F6   |  F7  |  F8  |  F9  | F10 | F11 |      |
            // |out tog|BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3|BT_SEL 4|BT_PRV|BT_NXT|BT_CLR|     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            // |       |        |        |        |        |        |      |      |      |     |     |      |
            bindings = <
                &tog 4       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7     &kp F8     &kp F9     &kp F10 &kp F11 &trans
                &out OUT_TOG &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_PRV &bt BT_NXT &bt BT_CLR &trans  &trans  &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
                &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
            >;
        };
    };
};
